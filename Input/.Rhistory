Species,
Sex,
Age_Class = `Age Class`,
Comments,
Cptr_EPU = `Population Unit`,
Cptr_Northing = as.numeric(`Northing (capture)`),
Cptr_Easting = as.numeric(`Easting (capture)`),
Cprt_UTM = `UTM Zone (capture)`,
Cptr_Date = Date,
Cptr_Time = Time,
Rls_Date = `Release Date`,
Rls_Time = `Release Time`,
Rls_EPU = `Population Unit (release)`,
Cptr_Method = `Capture Method`,
Drug = `Immobilization Drug`,
Volume = Volume...43,
`Tick Hair Loss`:Teeth)
View(anml.full)
# select relevant records
anml.full <- Elk_metadata %>%
mutate(Serial_no = as.numeric(`Serial No.`)) %>%
filter(Make == "Vectronics",
Species == "Roosevelt elk",
Serial_no >= 22585) %>%
mutate(AnimalID = row.names(anml)) %>%
select(AnimalID,
Serial_no,
Species,
Sex,
Age_Class = `Age Class`,
Comments,
Cptr_EPU = `Population Unit`,
Cptr_Northing = as.numeric(`Northing (capture)`),
Cptr_Easting = as.numeric(`Easting (capture)`),
Cptr_UTM = `UTM Zone (capture)`,
Cptr_Date = Date,
Cptr_Time = Time,
Rls_Date = `Release Date`,
Rls_Time = `Release Time`,
Rls_EPU = `Population Unit (release)`,
Cptr_Method = `Capture Method`,
Drug = `Immobilization Drug`,
Volume = Volume...43,
`Tick Hair Loss`:Teeth)
View(Elk_metadata)
# select relevant records
anml.full <- Elk_metadata %>%
mutate(Serial_no = as.numeric(`Serial No.`)) %>%
filter(Make == "Vectronics",
Species == "Roosevelt elk",
Serial_no >= 22585) %>%
mutate(AnimalID = row.names(anml),
Cptr_Northing = as.numeric(`Northing (capture)`),
Cptr_Easting = as.numeric(`Easting (capture)`)) %>%
select(AnimalID,
Serial_no,
Species,
Sex,
Age_Class = `Age Class`,
Comments,
Cptr_EPU = `Population Unit`,
Cptr_Northing,
Cptr_Easting,
Cptr_UTM = `UTM Zone (capture)`,
Cptr_Date = Date,
Cptr_Time = Time,
Rls_Date = `Release Date`,
Rls_Time = `Release Time`,
Rls_EPU = `Population Unit (release)`,
Cptr_Method = `Capture Method`,
Drug = `Immobilization Drug`,
Volume = Volume...43,
`Tick Hair Loss`:Teeth)
View(Elk_metadata)
anml <- anml.full%>%
select("AnimalID","Species","Sex", "Age_Class","Cptr_Northing","Cptr_Easting", "Cptr_Date","Rls_Date")
# fix lat&longs to UTM
xy <- anml %>%
select(AnimalID, Cptr_Northing, Cptr_Easting)
coordinates(xy) <- c("Cptr_Northing", "Cptr_Easting")
# fix lat&longs to UTM
xy <- anml %>%
select(AnimalID, Cptr_Northing, Cptr_Easting) %>%
filter(!is.na(anml$Cptr_Northing))
coordinates(xy) <- c("Cptr_Northing", "Cptr_Easting")
# change lat&longs to UTM
xy <- anml.full %>%
select(AnimalID, Cptr_UTM, Cptr_Northing, Cptr_Easting) %>%
filter(Cptr_UTM == "Lat Long")
View(xy)
###--- upload animal and collar metadata files
Elk_metadata <- read_csv("Capture and Telemetry_DATABASE_April 29_2022 (version 1).csv")
# select relevant records
anml.full <- Elk_metadata %>%
mutate(Serial_no = as.numeric(`Serial No.`)) %>%
filter(Make == "Vectronics",
Species == "Roosevelt elk",
Serial_no >= 22585) %>%
mutate(AnimalID = row.names(anml),
Cptr_Northing = as.numeric(`Northing (capture)`),
Cptr_Easting = as.numeric(`Easting (capture)`)) %>%
select(AnimalID,
Serial_no,
Species,
Sex,
Age_Class = `Age Class`,
Comments,
Cptr_EPU = `Population Unit`,
Cptr_Northing,
Cptr_Easting,
Cptr_UTM = `UTM Zone (capture)`,
Cptr_Date = Date,
Cptr_Time = Time,
Rls_Date = `Release Date`,
Rls_Time = `Release Time`,
Rls_EPU = `Population Unit (release)`,
Cptr_Method = `Capture Method`,
Drug = `Immobilization Drug`,
Volume = Volume...43,
`Tick Hair Loss`:Teeth)
glimpse(anml.full) # view data
head(anml.full)
# change lat&longs to UTM
xy <- anml.full %>%
select(AnimalID, Cptr_UTM, Cptr_Northing, Cptr_Easting) %>%
filter(Cptr_UTM == "Lat Long")
coordinates(xy) <- c("Cptr_Northing", "Cptr_Easting")
View(xy)
# change lat&longs to UTM
xy <- anml.full %>%
select(AnimalID, Cptr_UTM, Cptr_Northing, Cptr_Easting)
coordinates(xy) <- c("Cptr_Northing", "Cptr_Easting")
View(xy)
proj4string(xy) <- CRS("+proj=longlat +datum=WGS84")  ## for example
# change lat&longs to UTM
xy <- anml.full %>%
select(AnimalID, Cptr_UTM, Cptr_Northing, Cptr_Easting) %>%
filter(Cptr_UTM == "Lat Long")
coordinates(xy) <- c("Cptr_Northing", "Cptr_Easting")
proj4string(xy) <- CRS("+proj=longlat +datum=WGS84")  ## for example
xy <- anml.full %>%
select(AnimalID, Cptr_UTM, Cptr_Northing, Cptr_Easting) %>%
filter(Cptr_UTM == "Lat Long")
coordinates(xy) <- c("Cptr_Northing", "Cptr_Easting")
proj4string(xy) <- CRS("+proj=longlat +datum=NAD83")
res <- spTransform(xy, CRS("+proj=utm +zone=10 ellps=NAD83"))
elliptical parameter name
res <- spTransform(xy, CRS("+proj=utm +zone=10 ellps=WGS84"))
res
## For a SpatialPoints object rather than a SpatialPointsDataFrame, just do:
as(res, "SpatialPoints")
xy <- anml.full %>%
select(AnimalID, Cptr_UTM, Cptr_Northing, Cptr_Easting) %>%
filter(Cptr_UTM == "Lat Long")
coordinates(xy) <- c("Cptr_Northing", "Cptr_Easting")
proj4string(xy) <- CRS("+proj=longlat +datum=WGS84")
res <- spTransform(xy, CRS("+proj=utm +zone=10 ellps=WGS84"))
res
###--- upload animal and collar metadata files
Elk_metadata <- read_csv("Capture and Telemetry_DATABASE_April 29_2022 (version 1).csv")
# select relevant records
anml.full <- Elk_metadata %>%
mutate(Serial_no = as.numeric(`Serial No.`)) %>%
filter(Make == "Vectronics",
Species == "Roosevelt elk",
Serial_no >= 22585) %>%
mutate(AnimalID = row.names(anml),
Cptr_Northing = as.numeric(`Northing (capture)`),
Cptr_Easting = as.numeric(`Easting (capture)`)) %>%
select(AnimalID,
Serial_no,
Species,
Sex,
Age_Class = `Age Class`,
Comments,
Cptr_EPU = `Population Unit`,
Cptr_Northing,
Cptr_Easting,
Cptr_UTM = `UTM Zone (capture)`,
Cptr_Date = Date,
Cptr_Time = Time,
Rls_Date = `Release Date`,
Rls_Time = `Release Time`,
Rls_EPU = `Population Unit (release)`,
Cptr_Method = `Capture Method`,
Drug = `Immobilization Drug`,
Volume = Volume...43,
`Tick Hair Loss`:Teeth)
# change lat&longs to UTM
xy <- anml.full %>%
select(AnimalID, Cptr_UTM, Cptr_Northing, Cptr_Easting) %>%
filter(Cptr_UTM == "Lat Long")
View(xy)
###--- upload animal and collar metadata files
Elk_metadata <- read_csv("Capture and Telemetry_DATABASE_April 29_2022 (version 1).csv")
# select relevant records
anml.full <- Elk_metadata %>%
mutate(Serial_no = as.numeric(`Serial No.`)) %>%
filter(Make == "Vectronics",
Species == "Roosevelt elk",
Serial_no >= 22585) %>%
mutate(AnimalID = row.names(anml),
Cptr_Northing = as.numeric(`Northing (capture)`),
Cptr_Easting = as.numeric(`Easting (capture)`)) %>%
select(AnimalID,
Serial_no,
Species,
Sex,
Age_Class = `Age Class`,
Comments,
Cptr_EPU = `Population Unit`,
Cptr_Northing,
Cptr_Easting,
Cptr_UTM = `UTM Zone (capture)`,
Cptr_Date = Date,
Cptr_Time = Time,
Rls_Date = `Release Date`,
Rls_Time = `Release Time`,
Rls_EPU = `Population Unit (release)`,
Cptr_Method = `Capture Method`,
Drug = `Immobilization Drug`,
Volume = Volume...43,
`Tick Hair Loss`:Teeth)
glimpse(anml.full) # view data
# change lat&longs to UTM
xy <- anml.full %>%
select(AnimalID, Cptr_UTM, Cptr_Northing, Cptr_Easting) %>%
filter(Cptr_UTM == "Lat Long")
coordinates(xy) <- c("Cptr_Northing", "Cptr_Easting")
proj4string(xy) <- CRS("+proj=longlat +datum=NAD83")  ## for example
res <- spTransform(xy, CRS("+proj=utm +zone=10 ellps=WGS84"))
res
return(as.data.frame(res))
res <- spTransform(xy, CRS("+proj=utm +zone=10 ellps=WGS84"))
return(as.data.frame(res))
as.data.frame(res)
anml.coord <- full_join(anml.full, new_coord)
new_coord <- as.data.frame(res)
anml.coord <- full_join(anml.full, new_coord) %>%
mutate()
anml.coord <- full_join(anml.full, new_coord, by="AnimalID")
View(anml.coord)
Cptr_Easting = if_else(is.na(Cptr_Easting.y), Cptr_Easting.x, Cptr_Easting.y)
anml.full <- anml.coord %>%
mutate(Cptr_UTM = 10,
Cptr_Northing = if_else(is.na(Cptr_Northing.y), Cptr_Northing.x, Cptr_Northing.y),
Cptr_Easting = if_else(is.na(Cptr_Easting.y), Cptr_Easting.x, Cptr_Easting.y)) %>%
select(!C(Cptr_Northing.x:Cptr_UTM.x, Cptr_Northing.y:Cptr_UTM.y))
anml.coord <- full_join(anml.full, new_coord, by="AnimalID")
anml.full <- anml.coord %>%
mutate(Cptr_UTM = 10,
Cptr_Northing = if_else(is.na(Cptr_Northing.y), Cptr_Northing.x, Cptr_Northing.y),
Cptr_Easting = if_else(is.na(Cptr_Easting.y), Cptr_Easting.x, Cptr_Easting.y)) %>%
select(!Cptr_Northing.x:Cptr_UTM.x, !Cptr_Northing.y:Cptr_UTM.y)
anml.full <- anml.coord %>%
mutate(Cptr_UTM = 10,
Cptr_Northing = if_else(is.na(Cptr_Northing.y), Cptr_Northing.x, Cptr_Northing.y),
Cptr_Easting = if_else(is.na(Cptr_Easting.y), Cptr_Easting.x, Cptr_Easting.y)) %>%
select(!c(Cptr_Northing.x:Cptr_UTM.x), !c(Cptr_Northing.y:Cptr_UTM.y))
anml.full <- anml.coord %>%
mutate(Cptr_UTM = 10,
Cptr_Northing = if_else(is.na(Cptr_Northing.y), Cptr_Northing.x, Cptr_Northing.y),
Cptr_Easting = if_else(is.na(Cptr_Easting.y), Cptr_Easting.x, Cptr_Easting.y)) %>%
select(!c(Cptr_Northing.x:Cptr_UTM.x,Cptr_Northing.y:Cptr_UTM.y), everything())
library(ggplot2)    # for plotting
library(dbplyr)  # for data manipulation
library(stringr)    # for formatting character data
library(lubridate)  # for date-time conversions
library(sf)         # for uploading shapefiles and working with sf objects
library(sp)         # for changing lat/long to UTM
library(rgdal)
# set up working directories on H drive - map/revise as appropriate
InputDir <- c("C:/Users/TBRUSH/R/HR_Analysis_Elk2022/Input")
OutputDir <- c("C:/Users/TBRUSH/R/HR_Analysis_Elk2022/Output")
GISDir <- c("H:/R/Analysis/Generic_HomeRange/GISDir")
##############################################################
#### METADATA EXPLORATION & FORMATTING (BEGINNING)
#############################################################
## load data into R
setwd(InputDir)
###--- upload animal and collar metadata files
Elk_metadata <- read_csv("Capture and Telemetry_DATABASE_April 29_2022 (version 1).csv")
# select relevant records
anml.full <- Elk_metadata %>%
mutate(Serial_no = as.numeric(`Serial No.`)) %>%
filter(Make == "Vectronics",
Species == "Roosevelt elk",
Serial_no >= 22585) %>%
mutate(AnimalID = row.names(anml),
Cptr_Northing = as.numeric(`Northing (capture)`),
Cptr_Easting = as.numeric(`Easting (capture)`)) %>%
select(AnimalID,
Serial_no,
Species,
Sex,
Age_Class = `Age Class`,
Comments,
Cptr_EPU = `Population Unit`,
Cptr_Northing,
Cptr_Easting,
Cptr_UTM = `UTM Zone (capture)`,
Cptr_Date = Date,
Cptr_Time = Time,
Rls_Date = `Release Date`,
Rls_Time = `Release Time`,
Rls_EPU = `Population Unit (release)`,
Cptr_Method = `Capture Method`,
Drug = `Immobilization Drug`,
Volume = Volume...43,
`Tick Hair Loss`:Teeth)
glimpse(anml.full) # view data
head(anml.full)
# change lat&longs to UTM
xy <- anml.full %>%
select(AnimalID, Cptr_UTM, Cptr_Northing, Cptr_Easting) %>%
filter(Cptr_UTM == "Lat Long")
coordinates(xy) <- c("Cptr_Northing", "Cptr_Easting")
proj4string(xy) <- CRS("+proj=longlat +datum=NAD83")  ## for example
res <- spTransform(xy, CRS("+proj=utm +zone=10 ellps=WGS84"))
new_coord <- as.data.frame(res)
anml.full <- Elk_metadata %>%
mutate(Serial_no = as.numeric(`Serial No.`)) %>%
filter(Make == "Vectronics",
Species == "Roosevelt elk",
Serial_no >= 22585)
anml.full <- anml.full %>%
mutate(AnimalID = row.names(anml.full),
Cptr_Northing = as.numeric(`Northing (capture)`),
Cptr_Easting = as.numeric(`Easting (capture)`)) %>%
select(AnimalID,
Serial_no,
Species,
Sex,
Age_Class = `Age Class`,
Comments,
Cptr_EPU = `Population Unit`,
Cptr_Northing,
Cptr_Easting,
Cptr_UTM = `UTM Zone (capture)`,
Cptr_Date = Date,
Cptr_Time = Time,
Rls_Date = `Release Date`,
Rls_Time = `Release Time`,
Rls_EPU = `Population Unit (release)`,
Cptr_Method = `Capture Method`,
Drug = `Immobilization Drug`,
Volume = Volume...43,
`Tick Hair Loss`:Teeth)
glimpse(anml.full) # view data
head(anml.full)
xy <- anml.full %>%
select(AnimalID, Cptr_UTM, Cptr_Northing, Cptr_Easting) %>%
filter(Cptr_UTM == "Lat Long")
coordinates(xy) <- c("Cptr_Northing", "Cptr_Easting")
proj4string(xy) <- CRS("+proj=longlat +datum=NAD83")  ## for example
res <- spTransform(xy, CRS("+proj=utm +zone=10 ellps=WGS84"))
new_coord <- as.data.frame(res)
anml.coord <- full_join(anml.full, new_coord, by="AnimalID")
anml.coord <- full_join(anml.full, new_coord, by="AnimalID")%>%
mutate(Cptr_UTM = 10,
Cptr_Northing = if_else(is.na(Cptr_Northing.y), Cptr_Northing.x, Cptr_Northing.y),
Cptr_Easting = if_else(is.na(Cptr_Easting.y), Cptr_Easting.x, Cptr_Easting.y))
View(anml.coord)
xy <- anml.full %>%
select(AnimalID, Cptr_UTM, Cptr_Northing, Cptr_Easting) %>%
filter(Cptr_UTM == "Lat Long")
coordinates(xy) <- c("Cptr_Easting", "Cptr_Northing")
proj4string(xy) <- CRS("+proj=longlat +datum=NAD83")
res <- spTransform(xy, CRS("+proj=utm +zone=10 ellps=WGS84"))
new_coord <- as.data.frame(res)
xy <- anml.full %>%
select(AnimalID, Cptr_UTM, Cptr_Northing, Cptr_Easting) %>%
filter(Cptr_UTM == "Lat Long")
coordinates(xy) <- c("Cptr_Easting", "Cptr_Northing")
proj4string(xy) <- CRS("+proj=longlat +datum=NAD83")
res <- spTransform(xy, CRS("+proj=utm +zone=10 ellps=WGS84"))
new_coord <- as.data.frame(res)
# change lat&longs to UTM
xy <- anml.full %>%
select(AnimalID, Cptr_UTM, Long = Cptr_Northing, Lat = Cptr_Easting) %>%
filter(Cptr_UTM == "Lat Long")
View(xy)
xy <- anml.full %>%
select(AnimalID, Cptr_UTM, Long = Cptr_Northing, Lat = Cptr_Easting) %>%
filter(Cptr_UTM == "Lat Long")
coordinates(xy) <- c("Long", "Lat")
proj4string(xy) <- CRS("+proj=longlat +datum=NAD83")
res <- spTransform(xy, CRS("+proj=utm +zone=10 ellps=WGS84"))
new_coord <- as.data.frame(res)
View(new_coord)
anml.coord <- full_join(anml.full, new_coord, by=c("AnimalID", "Cptr_UTM"))
View(anml.coord)
anml.coord <- full_join(anml.full, new_coord, by=c("AnimalID", "Cptr_UTM"))%>%
mutate(Cptr_UTM = 10,
Cptr_Northing = if_else(is.na(Lat), Cptr_Northing, Lat),
Cptr_Easting = if_else(is.na(Long), Cptr_Easting, Long)) %>%
select(!Lat, !Long)
View(anml.coord)
anml.coord <- full_join(anml.full, new_coord, by=c("AnimalID", "Cptr_UTM"))%>%
mutate(Cptr_UTM = 10,
Cptr_Northing = if_else(is.na(Lat), Cptr_Northing, Lat),
Cptr_Easting = if_else(is.na(Long), Cptr_Easting, Long)) %>%
select(AnimalID:Teeth)
View(anml.coord)
anml.coord <- full_join(anml.full, new_coord, by=c("AnimalID", "Cptr_UTM"))%>%
mutate(Cptr_UTM = 10,
Cptr_Northing = if_else(is.na(Lat), Cptr_Northing, Lat),
Cptr_Easting = if_else(is.na(Long), round(Cptr_Easting, 0), round(Long, 0))) %>%
select(AnimalID:Teeth)
anml.full <- anml.coord
anml.full$Age_Class <- case_when(
grepl("A", anml.full$Age_Class) ~ "A",
grepl("Y", anml.full$Age_Class) ~ "Y",
TRUE ~ anml.full$Age_Class
)
# subset to smaller dataframe, and rename columns for consistency
names(anml.full)
# fix age classification
anml$Age_Class <- case_when(
grepl("A", anml$Age_Class) ~ "A",
grepl("Y", anml$Age_Class) ~ "Y",
TRUE ~ anml$Age_Class
)
names(anml.full)
anml <- anml.full%>%
select("AnimalID","Species","Sex", "Age_Class","Cptr_Northing","Cptr_Easting", "Cptr_Date","Rls_Date")
head(anml)  # check
# fix age classification
anml$Age_Class <- case_when(
grepl("A", anml$Age_Class) ~ "A",
grepl("Y", anml$Age_Class) ~ "Y",
TRUE ~ anml$Age_Class
)
# format dates for R
anml$Cptr_Datep <- as.POSIXct(strptime(anml$Cptr_Date, format = "%d-%b-%y"))
anml$Rls_Datep <- as.POSIXct(strptime(anml$Rls_Date, format = "%d-%b-%y"))
# add in Year
anml$Cptr_Year <- year(anml$Cptr_Datep)
glimpse(anml) # check dates
summary(anml) # check for NAs
###--- Check  data for number of captures per year by species, sex and min/max annual capture dates
anml %>% group_by(Cptr_Year, Species) %>% count(Sex)
anml %>% group_by(Cptr_Year, Species) %>% summarise(min(Cptr_Datep), max(Cptr_Datep))
###--- to turn the capture points into spatial object, using the CRS for NAD83 UTM Zone 10
# may need to clean some data during the import
# in this example, issue with one of the coordinates, delete that row from df before converting to sf object
Cpt.sf <- st_as_sf(anml, coords=c("Cptr_Easting","Cptr_Northing"), crs=26910)
# plot to check
ggplot() +
geom_sf(data = Cpt.sf, aes(fill=Species, col=Species)) +
coord_sf() +
theme_minimal()
ggplot() +
geom_sf(data = Cpt.sf, aes(fill=as.factor(Cptr_Year), col=as.factor(Cptr_Year))) +
coord_sf() +
theme_minimal()
ggplot() +
geom_sf(data = Cpt.sf, aes(fill=Sex, col=Sex)) +
coord_sf() +
theme_minimal()
telem <- read.csv("Position-2022-Jun-07_14-43-52.csv", header=TRUE,
na.strings = c("NA",""), stringsAsFactors = TRUE)
View(telem)
glimpse(telem) # check columns are coming in as appropriate class
telem <- read_csv("Position-2022-Jun-07_14-43-52.csv",
col_types = cols(`Acq. Time [LMT]` = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
glimpse(telem) # check columns are coming in as appropriate class
###--- check data quality and remove any objectional rows
# delete all records in UTM zone 33
telem <- telem[telem$Zone == 10,]
View(telem)
telem <- read_csv("Position-2022-Jun-07_15-19-55.csv",
col_types = cols(`Acq. Time [LMT]` = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
glimpse(telem) # check columns are coming in as appropriate class
head(telem) # check that data is reading correctly
summary(telem) # check if spelling inconsistencies or NAs
###--- check data quality and remove any objectional rows
# delete all records in UTM zone 33 (Germany)
telem <- telem[telem$Zone != 33,]
# use the CRS for lat/long and WGS84
telem.sf <- st_as_sf(telem[telem$`Latitude[deg]`<90,], coords=c("`Longitude[deg]`","`Latitude[deg]`"), crs=4326) %>%
select(`Collar ID`, `Acq. Time [LMT]`)
# use the CRS for lat/long and WGS84
telem.sf <- st_as_sf(telem[telem$`Latitude[deg]`<90,], coords=c("Longitude[deg]","Latitude[deg]"), crs=4326) %>%
select(`Collar ID`, `Acq. Time [LMT]`)
View(telem.sf)
View(anml)
View(anml.full)
View(anml.full)
# add animalID field
anml.dat <- anml.full %>%
select(AnimalID, Serial_no, as.character.POSIXt(Cptr_Date, "%d-%b-%y"))
# add animalID field
anml.dat <- anml.full %>%
select(AnimalID, Serial_no, as.character.POSIXt(anml.full$Cptr_Date, "%d-%b-%y"))
# add animalID field
anml.dat <- anml.full %>%
mutate(Cptr_Date = as.POSIXct(strptime(Cptr_Date, format = "%d-%b-%y"))) %>%
select(AnimalID, Serial_no, Cptr_Date)
View(anml.dat)
telem.tmp <- full_join(anml.dat, telem.sf, by=c("Serial_no"="Collar ID"))
View(telem.tmp)
# use the CRS for lat/long and WGS84
telem.sf <- st_as_sf(telem[telem$`Latitude[deg]`<90,], coords=c("Longitude[deg]","Latitude[deg]"), crs=4326) %>%
select(CollarID = `Collar ID`, Time = `Acq. Time [LMT]`)
View(telem.sf)
select(CollarID = `Collar ID`, Date, Time)
# use the CRS for lat/long and WGS84
telem.sf <- st_as_sf(telem[telem$`Latitude[deg]`<90,], coords=c("Longitude[deg]","Latitude[deg]"), crs=4326) %>%
mutate(Time = as.POSIXct(strptime(telem.sf$`Acq. Time [LMT]`, "%H:%M:%S")),
Date = as.POSIXct(strptime(telem.sf$`Acq. Time [LMT]`, "%Y-%m-%d"))) %>%
select(CollarID = `Collar ID`, Date, Time)
